from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from db import SessionLocal, Statistic, UserAction
from datetime import datetime

router = Router()

# –ö–æ–º–∞–Ω–¥–∞ /menu —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
@router.message(Command("menu"))
async def cmd_menu(message: types.Message):
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")],
            [KeyboardButton(text="–û –±–æ—Ç–µ")]
        ],
        resize_keyboard=True
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=kb)

@router.message(lambda m: m.text == "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
async def show_categories(message: types.Message):
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚ö° –≠–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞")],
            [KeyboardButton(text="üî• –¢–µ–ø–ª–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ")],
            [KeyboardButton(text="üõ¢ –ù–µ—Ñ—Ç—å"), KeyboardButton(text="üí® –ì–∞–∑")],
            [KeyboardButton(text="ü™® –£–≥–æ–ª—å")],
            [KeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¢–≠–ö"
    )
    await message.answer("üìä –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –¢–≠–ö ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=kb)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Üí –ø–æ–∫–∞–∑–∞—Ç—å inline-–∫–Ω–æ–ø–∫–∏ –≥–æ–¥–æ–≤
@router.message(lambda m: m.text in [
    "‚ö° –≠–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞",
    "üî• –¢–µ–ø–ª–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ",
    "üõ¢ –ù–µ—Ñ—Ç—å",
    "üí® –ì–∞–∑",
    "ü™® –£–≥–æ–ª—å",
    "üìã –°–≤–æ–¥–∫–∞ –ø–æ –¢–≠–ö"
])
async def category_selected(message: types.Message):
    category = message.text

    # ‚úÖ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    db = SessionLocal()
    db.add(UserAction(
        user_id=message.from_user.id,
        action="select_category",
        category=category,
        timestamp=datetime.utcnow()
    ))
    db.commit()
    db.close()

    inline_kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="2024", callback_data=f"{category}_2024"),
                InlineKeyboardButton(text="2023", callback_data=f"{category}_2023"),
            ],
            [
                InlineKeyboardButton(text="2022", callback_data=f"{category}_2022"),
                InlineKeyboardButton(text="2021", callback_data=f"{category}_2021"),
            ],
        ]
    )
    await message.answer(f"üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category}:", reply_markup=inline_kb)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥–æ–¥–∞ ‚Üí –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
@router.callback_query(lambda c: any(year in c.data for year in ["2021", "2022", "2023", "2024"]))
async def year_selected(callback: types.CallbackQuery):
    raw_data = callback.data
    for year in ["2021", "2022", "2023", "2024"]:
        if year in raw_data:
            selected_year = year
            break
    category = raw_data.replace(f"_{selected_year}", "")

    # ‚úÖ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –≥–æ–¥–∞
    db = SessionLocal()
    db.add(UserAction(
        user_id=callback.from_user.id,
        action="select_year",
        category=category,
        year=selected_year,
        timestamp=datetime.utcnow()
    ))
    db.commit()

    result = db.query(Statistic).filter_by(category=category, year=selected_year).first()
    db.close()

    if result:
        text = f"üìä –î–∞–Ω–Ω—ã–µ –ø–æ {category} –∑–∞ {selected_year} –≥–æ–¥:\n{result.text}"
    else:
        text = f"‚ÑπÔ∏è –î–∞–Ω–Ω—ã—Ö –ø–æ {category} –∑–∞ {selected_year} –≥–æ–¥ –ø–æ–∫–∞ –Ω–µ—Ç."

    await callback.message.answer(text)
    await callback.answer()

# –û—Ç–≤–µ—Ç –Ω–∞ "–û –±–æ—Ç–µ"
@router.message(lambda m: m.text == "–û –±–æ—Ç–µ")
async def about_from_menu(message: types.Message):
    await message.answer(
        "üìå –ë–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¢–≠–ö —Å–æ–∑–¥–∞–Ω –¥–ª—è –≤—Å–µ—Ö, –∫–æ–º—É –Ω—É–∂–Ω–æ –∏–º–µ—Ç—å –ø–æ–¥ —Ä—É–∫–æ–π –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"
        "–æ –∫–ª—é—á–µ–≤—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö –¢–≠–ö.\n\n"
        "üìà –î–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω—ã –∏–ª–∏ –º–æ–∂–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –±–æ—Ç.\n\n"
        "üîí –ë–æ—Ç –Ω–µ —Å–æ–±–∏—Ä–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n"
        "üìö –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:\n"
        "- –æ—Ç—á–µ—Ç—ã –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –ï–≠–° –†–æ—Å—Å–∏–∏ –æ—Ç –ê–û –°–û –ï–≠–°.\n"
        "- —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–æ 2050 –≥–æ–¥–∞.\n"
        "- –æ—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ç–µ–ø–ª–æ—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ –ú–∏–Ω—ç–Ω–µ—Ä–≥–æ.\n"
        "- –æ—Ç—á–µ—Ç—ã –†–æ—Å—Å—Ç–∞—Ç–∞.\n"
        "- –¥–∞–Ω–Ω—ã–µ –∏–∑ –ï–ú–ò–°–°.\n"
        "üóÉ –ü—É–±–ª–∏—á–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø—Ä–æ–µ–∫—Ç–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤—Å–µ—Ö –∂–µ–ª–∞—é—â–∏—Ö.\n\n"
        "üë®üíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: Intodex\n"
        "Telegram: @intodex\n"
        "Email: mail@tointodex.ru\n"
        "Website: https://intodex.ru"
    )

@router.message(lambda m: m.text == "‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
async def back_to_menu(message: types.Message):
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")],
            [KeyboardButton(text="–û –±–æ—Ç–µ")]
        ],
        resize_keyboard=True
    )
    await message.answer("‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb)

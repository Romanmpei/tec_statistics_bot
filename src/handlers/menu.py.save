from aiogram importter, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

router = Router()

# –ö–æ–º–∞–Ω–¥–∞ /menu —Å reply-–∫–Ω–æ–ø–∫–∞–º–∏
@router.message(Command("menu"))
async def cmd_menu(message: types.Message):
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")],
            [KeyboardButton(text="–û –±–æ—Ç–µ")]
        ],
        resize_keyboard=True
# –°–æ–æ–±—â–µ–Ω–∏–µ "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É" ‚Üí reply-–∫–Ω–æ–ø–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
@router.message(lambda m: m.text == "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
async def show_categories(message: types.Message):
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚ö° –≠–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞")],
            [KeyboardButton(text="üî• –¢–µ–ø–ª–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ")],
            [KeyboardButton(text="üõ¢ –ù–µ—Ñ—Ç—å"), KeyboardButton(text="üí® –ì–∞–∑")],
            [KeyboardButton(text="ü™® –£–≥–æ–ª—å"), KeyboardButton(text="üìã –°–≤–æ–¥–∫–∞ –ø–æ –¢–≠–ö")],
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¢–≠–ö",
    )
    await message.answer("üìä –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –¢–≠–ö ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=kb)
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=kb)

# –°–æ–æ–±—â–µ–Ω–∏–µ "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É" ‚Üí inline-–∫–Ω–æ–ø–∫–∏
@router.message(lambda m: m.text == "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
async def show_stats(message: types.Message):
    inline_kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ù–µ—Ñ—Ç—å", callback_data="stat_oil")],
            [InlineKeyboardButton(text="–ì–∞–∑", callback_data="stat_gas")]
        ]
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:", reply_markup=inline_kb)

@router.message(lambda m: m.text == "–û –±–æ—Ç–µ")
async def about_from_menu(message: types.Message):
    await message.answer("–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ —Å—Ñ–µ—Ä–µ –¢–≠–ö.\n–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞: Roman MPEI üöÄ")

# –û—Ç–≤–µ—Ç—ã –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
@router.callback_query(lambda c: c.data.startswith("stat_"))
async def process_stat_callback(callback: types.CallbackQuery):
    data = callback.data
    if data == "stat_oil":
        text = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –Ω–µ—Ñ—Ç–∏: [–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞]"
    elif data == "stat_gas":
        text = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥–∞–∑—É: [–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞]"
    else:
        text = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤—ã–±–æ—Ä"
    
    await callback.message.answer(text)
    await callback.answ
